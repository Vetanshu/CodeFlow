{"ast":null,"code":"var _jsxFileName = \"/Users/kunal/Desktop/Vetanshu/CodeCollab/CodeCollab/frontend/src/components/space/Editor.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useState, useEffect } from \"react\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { Box } from \"@mui/material\";\nimport { pythonLanguage } from \"@codemirror/lang-python\";\nimport { javascriptLanguage } from \"@codemirror/lang-javascript\";\nimport { cppLanguage } from \"@codemirror/lang-cpp\";\nimport { javaLanguage } from \"@codemirror/lang-java\";\nimport { LanguageSupport } from \"@codemirror/language\";\nimport { xcodeLight, xcodeDark } from \"@uiw/codemirror-theme-xcode\";\nimport { githubLight, githubDark } from \"@uiw/codemirror-theme-github\";\nimport { dracula } from \"@uiw/codemirror-theme-dracula\";\nimport { aura } from \"@uiw/codemirror-theme-aura\";\nimport { tokyoNight } from \"@uiw/codemirror-theme-tokyo-night\";\nimport { tokyoNightStorm } from \"@uiw/codemirror-theme-tokyo-night-storm\";\nimport { tokyoNightDay } from \"@uiw/codemirror-theme-tokyo-night-day\";\nimport { vscodeDark } from \"@uiw/codemirror-theme-vscode\";\nimport { socket } from \"../../scoket\";\nimport ACTIONS from \"../../utils/Actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst languageExtensions = {\n  javascript: [new LanguageSupport(javascriptLanguage)],\n  python: [new LanguageSupport(pythonLanguage)],\n  cpp: [new LanguageSupport(cppLanguage)],\n  java: [new LanguageSupport(javaLanguage)]\n};\nconst themeExtensions = {\n  xcodeLight,\n  xcodeDark,\n  githubDark,\n  githubLight,\n  dracula,\n  aura,\n  tokyoNight,\n  tokyoNightStorm,\n  tokyoNightDay,\n  vscodeDark\n};\nexport default function Editor(_ref) {\n  _s();\n  var _state$currentData;\n  let {\n    spaceId\n  } = _ref;\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.spaceReducer);\n  const [pos, setPos] = useState(\"1:1\");\n  const [codeChange, setCodeChange] = useState(\"\");\n  const onChange = useCallback((value, viewUpdate) => {\n    setCodeChange(viewUpdate.state.toJSON().doc);\n    socket.emit(ACTIONS.CODE_CHANGE, {\n      spaceId,\n      change: viewUpdate.state.toJSON().doc\n    });\n    // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    if (codeChange.length > 0) {\n      dispatch({\n        type: \"updateCurrentData\",\n        payload: {\n          ...state.currentData,\n          fileData: codeChange\n        }\n      });\n    }\n\n    // eslint-disable-next-line\n  }, [codeChange]);\n  useEffect(() => {\n    dispatch({\n      type: \"updateCursorPosition\",\n      payload: pos\n    });\n\n    // eslint-disable-next-line\n  }, [pos]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(CodeMirror, {\n      value: (_state$currentData = state.currentData) === null || _state$currentData === void 0 ? void 0 : _state$currentData.fileData,\n      autoFocus: true,\n      onStatistics: data => {\n        setPos(`${data.line.number}:${data.line.to - data.line.from + 1}`);\n      },\n      height: \"calc(100vh - 128px)\",\n      theme: themeExtensions[state.theme],\n      extensions: [...languageExtensions[state.language]],\n      onChange: onChange,\n      style: {\n        fontSize: state.fontSize\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(Editor, \"Tq8zjfb++lXVv3QzXsEDzBBb9c0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["useCallback","useState","useEffect","CodeMirror","Box","pythonLanguage","javascriptLanguage","cppLanguage","javaLanguage","LanguageSupport","xcodeLight","xcodeDark","githubLight","githubDark","dracula","aura","tokyoNight","tokyoNightStorm","tokyoNightDay","vscodeDark","socket","ACTIONS","useDispatch","useSelector","languageExtensions","javascript","python","cpp","java","themeExtensions","Editor","spaceId","dispatch","state","spaceReducer","pos","setPos","codeChange","setCodeChange","onChange","value","viewUpdate","toJSON","doc","emit","CODE_CHANGE","change","length","type","payload","currentData","fileData","data","line","number","to","from","theme","language","fontSize"],"sources":["/Users/kunal/Desktop/Vetanshu/CodeCollab/CodeCollab/frontend/src/components/space/Editor.js"],"sourcesContent":["import { useCallback, useState, useEffect } from \"react\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { Box } from \"@mui/material\";\nimport { pythonLanguage } from \"@codemirror/lang-python\";\nimport { javascriptLanguage } from \"@codemirror/lang-javascript\";\nimport { cppLanguage } from \"@codemirror/lang-cpp\";\nimport { javaLanguage } from \"@codemirror/lang-java\";\nimport { LanguageSupport } from \"@codemirror/language\";\nimport { xcodeLight, xcodeDark } from \"@uiw/codemirror-theme-xcode\";\nimport { githubLight, githubDark } from \"@uiw/codemirror-theme-github\";\nimport { dracula } from \"@uiw/codemirror-theme-dracula\";\nimport { aura } from \"@uiw/codemirror-theme-aura\";\nimport { tokyoNight } from \"@uiw/codemirror-theme-tokyo-night\";\nimport { tokyoNightStorm } from \"@uiw/codemirror-theme-tokyo-night-storm\";\nimport { tokyoNightDay } from \"@uiw/codemirror-theme-tokyo-night-day\";\nimport { vscodeDark } from \"@uiw/codemirror-theme-vscode\";\nimport { socket } from \"../../scoket\";\nimport ACTIONS from \"../../utils/Actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst languageExtensions = {\n  javascript: [new LanguageSupport(javascriptLanguage)],\n  python: [new LanguageSupport(pythonLanguage)],\n  cpp: [new LanguageSupport(cppLanguage)],\n  java: [new LanguageSupport(javaLanguage)],\n};\n\nconst themeExtensions = {\n  xcodeLight,\n  xcodeDark,\n  githubDark,\n  githubLight,\n  dracula,\n  aura,\n  tokyoNight,\n  tokyoNightStorm,\n  tokyoNightDay,\n  vscodeDark,\n};\n\nexport default function Editor({ spaceId }) {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.spaceReducer);\n  const [pos, setPos] = useState(\"1:1\");\n  const [codeChange, setCodeChange] = useState(\"\");\n\n  const onChange = useCallback((value, viewUpdate) => {\n    setCodeChange(viewUpdate.state.toJSON().doc);\n    socket.emit(ACTIONS.CODE_CHANGE, {\n      spaceId,\n      change: viewUpdate.state.toJSON().doc,\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (codeChange.length > 0) {\n      dispatch({\n        type: \"updateCurrentData\",\n        payload: { ...state.currentData, fileData: codeChange },\n      });\n    }\n\n    // eslint-disable-next-line\n  }, [codeChange]);\n\n  useEffect(() => {\n    dispatch({\n      type: \"updateCursorPosition\",\n      payload: pos,\n    });\n\n    // eslint-disable-next-line\n  }, [pos]);\n\n  return (\n    <Box>\n      <CodeMirror\n        value={state.currentData?.fileData}\n        autoFocus={true}\n        onStatistics={(data) => {\n          setPos(`${data.line.number}:${data.line.to - data.line.from + 1}`);\n        }}\n        height=\"calc(100vh - 128px)\"\n        theme={themeExtensions[state.theme]}\n        extensions={[...languageExtensions[state.language]]}\n        onChange={onChange}\n        style={{\n          fontSize: state.fontSize,\n        }}\n      />\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}