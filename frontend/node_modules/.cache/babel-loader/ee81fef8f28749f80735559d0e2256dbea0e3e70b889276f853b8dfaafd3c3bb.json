{"ast":null,"code":"import { Decoration, showPanel, EditorView, ViewPlugin, logException, gutter, showTooltip, getPanel, WidgetType, hoverTooltip, GutterMarker } from '@codemirror/view';\nimport { StateEffect, StateField, Facet, combineConfig, RangeSet } from '@codemirror/state';\nimport elt from 'crelt';\nclass SelectedDiagnostic {\n  constructor(from, to, diagnostic) {\n    this.from = from;\n    this.to = to;\n    this.diagnostic = diagnostic;\n  }\n}\nclass LintState {\n  constructor(diagnostics, panel, selected) {\n    this.diagnostics = diagnostics;\n    this.panel = panel;\n    this.selected = selected;\n  }\n  static init(diagnostics, panel, state) {\n    // Filter the list of diagnostics for which to create markers\n    let markedDiagnostics = diagnostics;\n    let diagnosticFilter = state.facet(lintConfig).markerFilter;\n    if (diagnosticFilter) markedDiagnostics = diagnosticFilter(markedDiagnostics);\n    let ranges = Decoration.set(markedDiagnostics.map(d => {\n      // For zero-length ranges or ranges covering only a line break, create a widget\n      return d.from == d.to || d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from ? Decoration.widget({\n        widget: new DiagnosticWidget(d),\n        diagnostic: d\n      }).range(d.from) : Decoration.mark({\n        attributes: {\n          class: \"cm-lintRange cm-lintRange-\" + d.severity\n        },\n        diagnostic: d\n      }).range(d.from, d.to);\n    }), true);\n    return new LintState(ranges, panel, findDiagnostic(ranges));\n  }\n}\nfunction findDiagnostic(diagnostics) {\n  let diagnostic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let after = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let found = null;\n  diagnostics.between(after, 1e9, (from, to, _ref) => {\n    let {\n      spec\n    } = _ref;\n    if (diagnostic && spec.diagnostic != diagnostic) return;\n    found = new SelectedDiagnostic(from, to, spec.diagnostic);\n    return false;\n  });\n  return found;\n}\nfunction hideTooltip(tr, tooltip) {\n  return !!(tr.effects.some(e => e.is(setDiagnosticsEffect)) || tr.changes.touchesRange(tooltip.pos));\n}\nfunction maybeEnableLint(state, effects) {\n  return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of([lintState, EditorView.decorations.compute([lintState], state => {\n    let {\n      selected,\n      panel\n    } = state.field(lintState);\n    return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([activeMark.range(selected.from, selected.to)]);\n  }), hoverTooltip(lintTooltip, {\n    hideOn: hideTooltip\n  }), baseTheme]));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/\nfunction setDiagnostics(state, diagnostics) {\n  return {\n    effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])\n  };\n}\n/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n  create() {\n    return new LintState(Decoration.none, null, null);\n  },\n  update(value, tr) {\n    if (tr.docChanged) {\n      let mapped = value.diagnostics.map(tr.changes),\n        selected = null;\n      if (value.selected) {\n        let selPos = tr.changes.mapPos(value.selected.from, 1);\n        selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n      }\n      value = new LintState(mapped, value.panel, selected);\n    }\n    for (let effect of tr.effects) {\n      if (effect.is(setDiagnosticsEffect)) {\n        value = LintState.init(effect.value, value.panel, tr.state);\n      } else if (effect.is(togglePanel)) {\n        value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n      } else if (effect.is(movePanelSelection)) {\n        value = new LintState(value.diagnostics, value.panel, effect.value);\n      }\n    }\n    return value;\n  },\n  provide: f => [showPanel.from(f, val => val.panel), EditorView.decorations.from(f, s => s.diagnostics)]\n});\n/**\nReturns the number of active lint diagnostics in the given state.\n*/\nfunction diagnosticCount(state) {\n  let lint = state.field(lintState, false);\n  return lint ? lint.diagnostics.size : 0;\n}\nconst activeMark = /*@__PURE__*/Decoration.mark({\n  class: \"cm-lintRange cm-lintRange-active\"\n});\nfunction lintTooltip(view, pos, side) {\n  let {\n    diagnostics\n  } = view.state.field(lintState);\n  let found = [],\n    stackStart = 2e8,\n    stackEnd = 0;\n  diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, _ref2) => {\n    let {\n      spec\n    } = _ref2;\n    if (pos >= from && pos <= to && (from == to || (pos > from || side > 0) && (pos < to || side < 0))) {\n      found.push(spec.diagnostic);\n      stackStart = Math.min(from, stackStart);\n      stackEnd = Math.max(to, stackEnd);\n    }\n  });\n  let diagnosticFilter = view.state.facet(lintConfig).tooltipFilter;\n  if (diagnosticFilter) found = diagnosticFilter(found);\n  if (!found.length) return null;\n  return {\n    pos: stackStart,\n    end: stackEnd,\n    above: view.state.doc.lineAt(stackStart).to < stackEnd,\n    create() {\n      return {\n        dom: diagnosticsTooltip(view, found)\n      };\n    }\n  };\n}\nfunction diagnosticsTooltip(view, diagnostics) {\n  return elt(\"ul\", {\n    class: \"cm-tooltip-lint\"\n  }, diagnostics.map(d => renderDiagnostic(view, d, false)));\n}\n/**\nCommand to open and focus the lint panel.\n*/\nconst openLintPanel = view => {\n  let field = view.state.field(lintState, false);\n  if (!field || !field.panel) view.dispatch({\n    effects: maybeEnableLint(view.state, [togglePanel.of(true)])\n  });\n  let panel = getPanel(view, LintPanel.open);\n  if (panel) panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n  return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\nconst closeLintPanel = view => {\n  let field = view.state.field(lintState, false);\n  if (!field || !field.panel) return false;\n  view.dispatch({\n    effects: togglePanel.of(false)\n  });\n  return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\nconst nextDiagnostic = view => {\n  let field = view.state.field(lintState, false);\n  if (!field) return false;\n  let sel = view.state.selection.main,\n    next = field.diagnostics.iter(sel.to + 1);\n  if (!next.value) {\n    next = field.diagnostics.iter(0);\n    if (!next.value || next.from == sel.from && next.to == sel.to) return false;\n  }\n  view.dispatch({\n    selection: {\n      anchor: next.from,\n      head: next.to\n    },\n    scrollIntoView: true\n  });\n  return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\nconst lintKeymap = [{\n  key: \"Mod-Shift-m\",\n  run: openLintPanel,\n  preventDefault: true\n}, {\n  key: \"F8\",\n  run: nextDiagnostic\n}];\nconst lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n  constructor(view) {\n    this.view = view;\n    this.timeout = -1;\n    this.set = true;\n    let {\n      delay\n    } = view.state.facet(lintConfig);\n    this.lintTime = Date.now() + delay;\n    this.run = this.run.bind(this);\n    this.timeout = setTimeout(this.run, delay);\n  }\n  run() {\n    let now = Date.now();\n    if (now < this.lintTime - 10) {\n      setTimeout(this.run, this.lintTime - now);\n    } else {\n      this.set = false;\n      let {\n          state\n        } = this.view,\n        {\n          sources\n        } = state.facet(lintConfig);\n      Promise.all(sources.map(source => Promise.resolve(source(this.view)))).then(annotations => {\n        let all = annotations.reduce((a, b) => a.concat(b));\n        if (this.view.state.doc == state.doc) this.view.dispatch(setDiagnostics(this.view.state, all));\n      }, error => {\n        logException(this.view.state, error);\n      });\n    }\n  }\n  update(update) {\n    let config = update.state.facet(lintConfig);\n    if (update.docChanged || config != update.startState.facet(lintConfig) || config.needsRefresh && config.needsRefresh(update)) {\n      this.lintTime = Date.now() + config.delay;\n      if (!this.set) {\n        this.set = true;\n        this.timeout = setTimeout(this.run, config.delay);\n      }\n    }\n  }\n  force() {\n    if (this.set) {\n      this.lintTime = Date.now();\n      this.run();\n    }\n  }\n  destroy() {\n    clearTimeout(this.timeout);\n  }\n});\nconst lintConfig = /*@__PURE__*/Facet.define({\n  combine(input) {\n    return Object.assign({\n      sources: input.map(i => i.source)\n    }, combineConfig(input.map(i => i.config), {\n      delay: 750,\n      markerFilter: null,\n      tooltipFilter: null,\n      needsRefresh: null\n    }, {\n      needsRefresh: (a, b) => !a ? b : !b ? a : u => a(u) || b(u)\n    }));\n  },\n  enables: lintPlugin\n});\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed).\n*/\nfunction linter(source) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return lintConfig.of({\n    source,\n    config\n  });\n}\n/**\nForces any linters [configured](https://codemirror.net/6/docs/ref/#lint.linter) to run when the\neditor is idle to run right away.\n*/\nfunction forceLinting(view) {\n  let plugin = view.plugin(lintPlugin);\n  if (plugin) plugin.force();\n}\nfunction assignKeys(actions) {\n  let assigned = [];\n  if (actions) actions: for (let {\n    name\n  } of actions) {\n    for (let i = 0; i < name.length; i++) {\n      let ch = name[i];\n      if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n        assigned.push(ch);\n        continue actions;\n      }\n    }\n    assigned.push(\"\");\n  }\n  return assigned;\n}\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n  var _a;\n  let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n  return elt(\"li\", {\n    class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity\n  }, elt(\"span\", {\n    class: \"cm-diagnosticText\"\n  }, diagnostic.renderMessage ? diagnostic.renderMessage() : diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n    let fired = false,\n      click = e => {\n        e.preventDefault();\n        if (fired) return;\n        fired = true;\n        let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n        if (found) action.apply(view, found.from, found.to);\n      };\n    let {\n        name\n      } = action,\n      keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n    let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex), elt(\"u\", name.slice(keyIndex, keyIndex + 1)), name.slice(keyIndex + 1)];\n    return elt(\"button\", {\n      type: \"button\",\n      class: \"cm-diagnosticAction\",\n      onclick: click,\n      onmousedown: click,\n      \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n    }, nameElt);\n  }), diagnostic.source && elt(\"div\", {\n    class: \"cm-diagnosticSource\"\n  }, diagnostic.source));\n}\nclass DiagnosticWidget extends WidgetType {\n  constructor(diagnostic) {\n    super();\n    this.diagnostic = diagnostic;\n  }\n  eq(other) {\n    return other.diagnostic == this.diagnostic;\n  }\n  toDOM() {\n    return elt(\"span\", {\n      class: \"cm-lintPoint cm-lintPoint-\" + this.diagnostic.severity\n    });\n  }\n}\nclass PanelItem {\n  constructor(view, diagnostic) {\n    this.diagnostic = diagnostic;\n    this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n    this.dom = renderDiagnostic(view, diagnostic, true);\n    this.dom.id = this.id;\n    this.dom.setAttribute(\"role\", \"option\");\n  }\n}\nclass LintPanel {\n  constructor(view) {\n    this.view = view;\n    this.items = [];\n    let onkeydown = event => {\n      if (event.keyCode == 27) {\n        // Escape\n        closeLintPanel(this.view);\n        this.view.focus();\n      } else if (event.keyCode == 38 || event.keyCode == 33) {\n        // ArrowUp, PageUp\n        this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n      } else if (event.keyCode == 40 || event.keyCode == 34) {\n        // ArrowDown, PageDown\n        this.moveSelection((this.selectedIndex + 1) % this.items.length);\n      } else if (event.keyCode == 36) {\n        // Home\n        this.moveSelection(0);\n      } else if (event.keyCode == 35) {\n        // End\n        this.moveSelection(this.items.length - 1);\n      } else if (event.keyCode == 13) {\n        // Enter\n        this.view.focus();\n      } else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) {\n        // A-Z\n        let {\n            diagnostic\n          } = this.items[this.selectedIndex],\n          keys = assignKeys(diagnostic.actions);\n        for (let i = 0; i < keys.length; i++) if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n          let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n          if (found) diagnostic.actions[i].apply(view, found.from, found.to);\n        }\n      } else {\n        return;\n      }\n      event.preventDefault();\n    };\n    let onclick = event => {\n      for (let i = 0; i < this.items.length; i++) {\n        if (this.items[i].dom.contains(event.target)) this.moveSelection(i);\n      }\n    };\n    this.list = elt(\"ul\", {\n      tabIndex: 0,\n      role: \"listbox\",\n      \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n      onkeydown,\n      onclick\n    });\n    this.dom = elt(\"div\", {\n      class: \"cm-panel-lint\"\n    }, this.list, elt(\"button\", {\n      type: \"button\",\n      name: \"close\",\n      \"aria-label\": this.view.state.phrase(\"close\"),\n      onclick: () => closeLintPanel(this.view)\n    }, \"×\"));\n    this.update();\n  }\n  get selectedIndex() {\n    let selected = this.view.state.field(lintState).selected;\n    if (!selected) return -1;\n    for (let i = 0; i < this.items.length; i++) if (this.items[i].diagnostic == selected.diagnostic) return i;\n    return -1;\n  }\n  update() {\n    let {\n      diagnostics,\n      selected\n    } = this.view.state.field(lintState);\n    let i = 0,\n      needsSync = false,\n      newSelectedItem = null;\n    diagnostics.between(0, this.view.state.doc.length, (_start, _end, _ref3) => {\n      let {\n        spec\n      } = _ref3;\n      let found = -1,\n        item;\n      for (let j = i; j < this.items.length; j++) if (this.items[j].diagnostic == spec.diagnostic) {\n        found = j;\n        break;\n      }\n      if (found < 0) {\n        item = new PanelItem(this.view, spec.diagnostic);\n        this.items.splice(i, 0, item);\n        needsSync = true;\n      } else {\n        item = this.items[found];\n        if (found > i) {\n          this.items.splice(i, found - i);\n          needsSync = true;\n        }\n      }\n      if (selected && item.diagnostic == selected.diagnostic) {\n        if (!item.dom.hasAttribute(\"aria-selected\")) {\n          item.dom.setAttribute(\"aria-selected\", \"true\");\n          newSelectedItem = item;\n        }\n      } else if (item.dom.hasAttribute(\"aria-selected\")) {\n        item.dom.removeAttribute(\"aria-selected\");\n      }\n      i++;\n    });\n    while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n      needsSync = true;\n      this.items.pop();\n    }\n    if (this.items.length == 0) {\n      this.items.push(new PanelItem(this.view, {\n        from: -1,\n        to: -1,\n        severity: \"info\",\n        message: this.view.state.phrase(\"No diagnostics\")\n      }));\n      needsSync = true;\n    }\n    if (newSelectedItem) {\n      this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n      this.view.requestMeasure({\n        key: this,\n        read: () => ({\n          sel: newSelectedItem.dom.getBoundingClientRect(),\n          panel: this.list.getBoundingClientRect()\n        }),\n        write: _ref4 => {\n          let {\n            sel,\n            panel\n          } = _ref4;\n          if (sel.top < panel.top) this.list.scrollTop -= panel.top - sel.top;else if (sel.bottom > panel.bottom) this.list.scrollTop += sel.bottom - panel.bottom;\n        }\n      });\n    } else if (this.selectedIndex < 0) {\n      this.list.removeAttribute(\"aria-activedescendant\");\n    }\n    if (needsSync) this.sync();\n  }\n  sync() {\n    let domPos = this.list.firstChild;\n    function rm() {\n      let prev = domPos;\n      domPos = prev.nextSibling;\n      prev.remove();\n    }\n    for (let item of this.items) {\n      if (item.dom.parentNode == this.list) {\n        while (domPos != item.dom) rm();\n        domPos = item.dom.nextSibling;\n      } else {\n        this.list.insertBefore(item.dom, domPos);\n      }\n    }\n    while (domPos) rm();\n  }\n  moveSelection(selectedIndex) {\n    if (this.selectedIndex < 0) return;\n    let field = this.view.state.field(lintState);\n    let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n    if (!selection) return;\n    this.view.dispatch({\n      selection: {\n        anchor: selection.from,\n        head: selection.to\n      },\n      scrollIntoView: true,\n      effects: movePanelSelection.of(selection)\n    });\n  }\n  static open(view) {\n    return new LintPanel(view);\n  }\n}\nfunction svg(content) {\n  let attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : `viewBox=\"0 0 40 40\"`;\n  return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;\n}\nfunction underline(color) {\n  return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`, `width=\"6\" height=\"3\"`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n  \".cm-diagnostic\": {\n    padding: \"3px 6px 3px 8px\",\n    marginLeft: \"-1px\",\n    display: \"block\",\n    whiteSpace: \"pre-wrap\"\n  },\n  \".cm-diagnostic-error\": {\n    borderLeft: \"5px solid #d11\"\n  },\n  \".cm-diagnostic-warning\": {\n    borderLeft: \"5px solid orange\"\n  },\n  \".cm-diagnostic-info\": {\n    borderLeft: \"5px solid #999\"\n  },\n  \".cm-diagnosticAction\": {\n    font: \"inherit\",\n    border: \"none\",\n    padding: \"2px 4px\",\n    backgroundColor: \"#444\",\n    color: \"white\",\n    borderRadius: \"3px\",\n    marginLeft: \"8px\",\n    cursor: \"pointer\"\n  },\n  \".cm-diagnosticSource\": {\n    fontSize: \"70%\",\n    opacity: .7\n  },\n  \".cm-lintRange\": {\n    backgroundPosition: \"left bottom\",\n    backgroundRepeat: \"repeat-x\",\n    paddingBottom: \"0.7px\"\n  },\n  \".cm-lintRange-error\": {\n    backgroundImage: /*@__PURE__*/underline(\"#d11\")\n  },\n  \".cm-lintRange-warning\": {\n    backgroundImage: /*@__PURE__*/underline(\"orange\")\n  },\n  \".cm-lintRange-info\": {\n    backgroundImage: /*@__PURE__*/underline(\"#999\")\n  },\n  \".cm-lintRange-active\": {\n    backgroundColor: \"#ffdd9980\"\n  },\n  \".cm-tooltip-lint\": {\n    padding: 0,\n    margin: 0\n  },\n  \".cm-lintPoint\": {\n    position: \"relative\",\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      bottom: 0,\n      left: \"-2px\",\n      borderLeft: \"3px solid transparent\",\n      borderRight: \"3px solid transparent\",\n      borderBottom: \"4px solid #d11\"\n    }\n  },\n  \".cm-lintPoint-warning\": {\n    \"&:after\": {\n      borderBottomColor: \"orange\"\n    }\n  },\n  \".cm-lintPoint-info\": {\n    \"&:after\": {\n      borderBottomColor: \"#999\"\n    }\n  },\n  \".cm-panel.cm-panel-lint\": {\n    position: \"relative\",\n    \"& ul\": {\n      maxHeight: \"100px\",\n      overflowY: \"auto\",\n      \"& [aria-selected]\": {\n        backgroundColor: \"#ddd\",\n        \"& u\": {\n          textDecoration: \"underline\"\n        }\n      },\n      \"&:focus [aria-selected]\": {\n        background_fallback: \"#bdf\",\n        backgroundColor: \"Highlight\",\n        color_fallback: \"white\",\n        color: \"HighlightText\"\n      },\n      \"& u\": {\n        textDecoration: \"none\"\n      },\n      padding: 0,\n      margin: 0\n    },\n    \"& [name=close]\": {\n      position: \"absolute\",\n      top: \"0\",\n      right: \"2px\",\n      background: \"inherit\",\n      border: \"none\",\n      font: \"inherit\",\n      padding: 0,\n      margin: 0\n    }\n  }\n});\nclass LintGutterMarker extends GutterMarker {\n  constructor(diagnostics) {\n    super();\n    this.diagnostics = diagnostics;\n    this.severity = diagnostics.reduce((max, d) => {\n      let s = d.severity;\n      return s == \"error\" || s == \"warning\" && max == \"info\" ? s : max;\n    }, \"info\");\n  }\n  toDOM(view) {\n    let elt = document.createElement(\"div\");\n    elt.className = \"cm-lint-marker cm-lint-marker-\" + this.severity;\n    let diagnostics = this.diagnostics;\n    let diagnosticsFilter = view.state.facet(lintGutterConfig).tooltipFilter;\n    if (diagnosticsFilter) diagnostics = diagnosticsFilter(diagnostics);\n    if (diagnostics.length) elt.onmouseover = () => gutterMarkerMouseOver(view, elt, diagnostics);\n    return elt;\n  }\n}\nfunction trackHoverOn(view, marker) {\n  let mousemove = event => {\n    let rect = marker.getBoundingClientRect();\n    if (event.clientX > rect.left - 10 /* Hover.Margin */ && event.clientX < rect.right + 10 /* Hover.Margin */ && event.clientY > rect.top - 10 /* Hover.Margin */ && event.clientY < rect.bottom + 10 /* Hover.Margin */) return;\n    for (let target = event.target; target; target = target.parentNode) {\n      if (target.nodeType == 1 && target.classList.contains(\"cm-tooltip-lint\")) return;\n    }\n    window.removeEventListener(\"mousemove\", mousemove);\n    if (view.state.field(lintGutterTooltip)) view.dispatch({\n      effects: setLintGutterTooltip.of(null)\n    });\n  };\n  window.addEventListener(\"mousemove\", mousemove);\n}\nfunction gutterMarkerMouseOver(view, marker, diagnostics) {\n  function hovered() {\n    let line = view.elementAtHeight(marker.getBoundingClientRect().top + 5 - view.documentTop);\n    const linePos = view.coordsAtPos(line.from);\n    if (linePos) {\n      view.dispatch({\n        effects: setLintGutterTooltip.of({\n          pos: line.from,\n          above: false,\n          create() {\n            return {\n              dom: diagnosticsTooltip(view, diagnostics),\n              getCoords: () => marker.getBoundingClientRect()\n            };\n          }\n        })\n      });\n    }\n    marker.onmouseout = marker.onmousemove = null;\n    trackHoverOn(view, marker);\n  }\n  let {\n    hoverTime\n  } = view.state.facet(lintGutterConfig);\n  let hoverTimeout = setTimeout(hovered, hoverTime);\n  marker.onmouseout = () => {\n    clearTimeout(hoverTimeout);\n    marker.onmouseout = marker.onmousemove = null;\n  };\n  marker.onmousemove = () => {\n    clearTimeout(hoverTimeout);\n    hoverTimeout = setTimeout(hovered, hoverTime);\n  };\n}\nfunction markersForDiagnostics(doc, diagnostics) {\n  let byLine = Object.create(null);\n  for (let diagnostic of diagnostics) {\n    let line = doc.lineAt(diagnostic.from);\n    (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);\n  }\n  let markers = [];\n  for (let line in byLine) {\n    markers.push(new LintGutterMarker(byLine[line]).range(+line));\n  }\n  return RangeSet.of(markers, true);\n}\nconst lintGutterExtension = /*@__PURE__*/gutter({\n  class: \"cm-gutter-lint\",\n  markers: view => view.state.field(lintGutterMarkers)\n});\nconst lintGutterMarkers = /*@__PURE__*/StateField.define({\n  create() {\n    return RangeSet.empty;\n  },\n  update(markers, tr) {\n    markers = markers.map(tr.changes);\n    let diagnosticFilter = tr.state.facet(lintGutterConfig).markerFilter;\n    for (let effect of tr.effects) {\n      if (effect.is(setDiagnosticsEffect)) {\n        let diagnostics = effect.value;\n        if (diagnosticFilter) diagnostics = diagnosticFilter(diagnostics || []);\n        markers = markersForDiagnostics(tr.state.doc, diagnostics.slice(0));\n      }\n    }\n    return markers;\n  }\n});\nconst setLintGutterTooltip = /*@__PURE__*/StateEffect.define();\nconst lintGutterTooltip = /*@__PURE__*/StateField.define({\n  create() {\n    return null;\n  },\n  update(tooltip, tr) {\n    if (tooltip && tr.docChanged) tooltip = hideTooltip(tr, tooltip) ? null : Object.assign(Object.assign({}, tooltip), {\n      pos: tr.changes.mapPos(tooltip.pos)\n    });\n    return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);\n  },\n  provide: field => showTooltip.from(field)\n});\nconst lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({\n  \".cm-gutter-lint\": {\n    width: \"1.4em\",\n    \"& .cm-gutterElement\": {\n      padding: \".2em\"\n    }\n  },\n  \".cm-lint-marker\": {\n    width: \"1em\",\n    height: \"1em\"\n  },\n  \".cm-lint-marker-info\": {\n    content: /*@__PURE__*/svg(`<path fill=\"#aaf\" stroke=\"#77e\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M5 5L35 5L35 35L5 35Z\"/>`)\n  },\n  \".cm-lint-marker-warning\": {\n    content: /*@__PURE__*/svg(`<path fill=\"#fe8\" stroke=\"#fd7\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M20 6L37 35L3 35Z\"/>`)\n  },\n  \".cm-lint-marker-error\": {\n    content: /*@__PURE__*/svg(`<circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"#f87\" stroke=\"#f43\" stroke-width=\"6\"/>`)\n  }\n});\nconst lintGutterConfig = /*@__PURE__*/Facet.define({\n  combine(configs) {\n    return combineConfig(configs, {\n      hoverTime: 300 /* Hover.Time */,\n      markerFilter: null,\n      tooltipFilter: null\n    });\n  }\n});\n/**\nReturns an extension that installs a gutter showing markers for\neach line that has diagnostics, which can be hovered over to see\nthe diagnostics.\n*/\nfunction lintGutter() {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return [lintGutterConfig.of(config), lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];\n}\n/**\nIterate over the marked diagnostics for the given editor state,\ncalling `f` for each of them. Note that, if the document changed\nsince the diagnostics were created, the `Diagnostic` object will\nhold the original outdated position, whereas the `to` and `from`\narguments hold the diagnostic's current position.\n*/\nfunction forEachDiagnostic(state, f) {\n  let lState = state.field(lintState, false);\n  if (lState && lState.diagnostics.size) for (let iter = RangeSet.iter([lState.diagnostics]); iter.value; iter.next()) f(iter.value.spec.diagnostic, iter.from, iter.to);\n}\nexport { closeLintPanel, diagnosticCount, forEachDiagnostic, forceLinting, lintGutter, lintKeymap, linter, nextDiagnostic, openLintPanel, setDiagnostics, setDiagnosticsEffect };","map":{"version":3,"names":["Decoration","showPanel","EditorView","ViewPlugin","logException","gutter","showTooltip","getPanel","WidgetType","hoverTooltip","GutterMarker","StateEffect","StateField","Facet","combineConfig","RangeSet","elt","SelectedDiagnostic","constructor","from","to","diagnostic","LintState","diagnostics","panel","selected","init","state","markedDiagnostics","diagnosticFilter","facet","lintConfig","markerFilter","ranges","set","map","d","doc","lineAt","widget","DiagnosticWidget","range","mark","attributes","class","severity","findDiagnostic","after","found","between","spec","hideTooltip","tr","tooltip","effects","some","e","is","setDiagnosticsEffect","changes","touchesRange","pos","maybeEnableLint","field","lintState","concat","appendConfig","of","decorations","compute","none","activeMark","lintTooltip","hideOn","baseTheme","setDiagnostics","define","togglePanel","movePanelSelection","create","update","value","docChanged","mapped","selPos","mapPos","effect","LintPanel","open","provide","f","val","s","diagnosticCount","lint","size","view","side","stackStart","stackEnd","push","Math","min","max","tooltipFilter","length","end","above","dom","diagnosticsTooltip","renderDiagnostic","openLintPanel","dispatch","querySelector","focus","closeLintPanel","nextDiagnostic","sel","selection","main","next","iter","anchor","head","scrollIntoView","lintKeymap","key","run","preventDefault","lintPlugin","fromClass","timeout","delay","lintTime","Date","now","bind","setTimeout","sources","Promise","all","source","resolve","then","annotations","reduce","a","b","error","config","startState","needsRefresh","force","destroy","clearTimeout","combine","input","Object","assign","i","u","enables","linter","forceLinting","plugin","assignKeys","actions","assigned","name","ch","test","c","toLowerCase","inPanel","_a","keys","renderMessage","message","action","fired","click","apply","keyIndex","indexOf","nameElt","slice","type","onclick","onmousedown","eq","other","toDOM","PanelItem","id","floor","random","toString","setAttribute","items","onkeydown","event","keyCode","moveSelection","selectedIndex","toUpperCase","charCodeAt","contains","target","list","tabIndex","role","phrase","needsSync","newSelectedItem","_start","_end","item","j","splice","hasAttribute","removeAttribute","pop","requestMeasure","read","getBoundingClientRect","write","top","scrollTop","bottom","sync","domPos","firstChild","rm","prev","nextSibling","remove","parentNode","insertBefore","svg","content","attrs","encodeURIComponent","underline","color","padding","marginLeft","display","whiteSpace","borderLeft","font","border","backgroundColor","borderRadius","cursor","fontSize","opacity","backgroundPosition","backgroundRepeat","paddingBottom","backgroundImage","margin","position","left","borderRight","borderBottom","borderBottomColor","maxHeight","overflowY","textDecoration","background_fallback","color_fallback","right","background","LintGutterMarker","document","createElement","className","diagnosticsFilter","lintGutterConfig","onmouseover","gutterMarkerMouseOver","trackHoverOn","marker","mousemove","rect","clientX","clientY","nodeType","classList","window","removeEventListener","lintGutterTooltip","setLintGutterTooltip","addEventListener","hovered","line","elementAtHeight","documentTop","linePos","coordsAtPos","getCoords","onmouseout","onmousemove","hoverTime","hoverTimeout","markersForDiagnostics","byLine","markers","lintGutterExtension","lintGutterMarkers","empty","t","lintGutterTheme","width","height","configs","lintGutter","forEachDiagnostic","lState"],"sources":["/Users/kunal/Desktop/Vetanshu/CodeCollab/CodeCollab/frontend/node_modules/@codemirror/lint/dist/index.js"],"sourcesContent":["import { Decoration, showPanel, EditorView, ViewPlugin, logException, gutter, showTooltip, getPanel, WidgetType, hoverTooltip, GutterMarker } from '@codemirror/view';\nimport { StateEffect, StateField, Facet, combineConfig, RangeSet } from '@codemirror/state';\nimport elt from 'crelt';\n\nclass SelectedDiagnostic {\n    constructor(from, to, diagnostic) {\n        this.from = from;\n        this.to = to;\n        this.diagnostic = diagnostic;\n    }\n}\nclass LintState {\n    constructor(diagnostics, panel, selected) {\n        this.diagnostics = diagnostics;\n        this.panel = panel;\n        this.selected = selected;\n    }\n    static init(diagnostics, panel, state) {\n        // Filter the list of diagnostics for which to create markers\n        let markedDiagnostics = diagnostics;\n        let diagnosticFilter = state.facet(lintConfig).markerFilter;\n        if (diagnosticFilter)\n            markedDiagnostics = diagnosticFilter(markedDiagnostics);\n        let ranges = Decoration.set(markedDiagnostics.map((d) => {\n            // For zero-length ranges or ranges covering only a line break, create a widget\n            return d.from == d.to || (d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from)\n                ? Decoration.widget({\n                    widget: new DiagnosticWidget(d),\n                    diagnostic: d\n                }).range(d.from)\n                : Decoration.mark({\n                    attributes: { class: \"cm-lintRange cm-lintRange-\" + d.severity },\n                    diagnostic: d\n                }).range(d.from, d.to);\n        }), true);\n        return new LintState(ranges, panel, findDiagnostic(ranges));\n    }\n}\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n    let found = null;\n    diagnostics.between(after, 1e9, (from, to, { spec }) => {\n        if (diagnostic && spec.diagnostic != diagnostic)\n            return;\n        found = new SelectedDiagnostic(from, to, spec.diagnostic);\n        return false;\n    });\n    return found;\n}\nfunction hideTooltip(tr, tooltip) {\n    return !!(tr.effects.some(e => e.is(setDiagnosticsEffect)) || tr.changes.touchesRange(tooltip.pos));\n}\nfunction maybeEnableLint(state, effects) {\n    return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of([\n        lintState,\n        EditorView.decorations.compute([lintState], state => {\n            let { selected, panel } = state.field(lintState);\n            return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([\n                activeMark.range(selected.from, selected.to)\n            ]);\n        }),\n        hoverTooltip(lintTooltip, { hideOn: hideTooltip }),\n        baseTheme\n    ]));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/\nfunction setDiagnostics(state, diagnostics) {\n    return {\n        effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])\n    };\n}\n/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n    create() {\n        return new LintState(Decoration.none, null, null);\n    },\n    update(value, tr) {\n        if (tr.docChanged) {\n            let mapped = value.diagnostics.map(tr.changes), selected = null;\n            if (value.selected) {\n                let selPos = tr.changes.mapPos(value.selected.from, 1);\n                selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n            }\n            value = new LintState(mapped, value.panel, selected);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                value = LintState.init(effect.value, value.panel, tr.state);\n            }\n            else if (effect.is(togglePanel)) {\n                value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n            }\n            else if (effect.is(movePanelSelection)) {\n                value = new LintState(value.diagnostics, value.panel, effect.value);\n            }\n        }\n        return value;\n    },\n    provide: f => [showPanel.from(f, val => val.panel),\n        EditorView.decorations.from(f, s => s.diagnostics)]\n});\n/**\nReturns the number of active lint diagnostics in the given state.\n*/\nfunction diagnosticCount(state) {\n    let lint = state.field(lintState, false);\n    return lint ? lint.diagnostics.size : 0;\n}\nconst activeMark = /*@__PURE__*/Decoration.mark({ class: \"cm-lintRange cm-lintRange-active\" });\nfunction lintTooltip(view, pos, side) {\n    let { diagnostics } = view.state.field(lintState);\n    let found = [], stackStart = 2e8, stackEnd = 0;\n    diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, { spec }) => {\n        if (pos >= from && pos <= to &&\n            (from == to || ((pos > from || side > 0) && (pos < to || side < 0)))) {\n            found.push(spec.diagnostic);\n            stackStart = Math.min(from, stackStart);\n            stackEnd = Math.max(to, stackEnd);\n        }\n    });\n    let diagnosticFilter = view.state.facet(lintConfig).tooltipFilter;\n    if (diagnosticFilter)\n        found = diagnosticFilter(found);\n    if (!found.length)\n        return null;\n    return {\n        pos: stackStart,\n        end: stackEnd,\n        above: view.state.doc.lineAt(stackStart).to < stackEnd,\n        create() {\n            return { dom: diagnosticsTooltip(view, found) };\n        }\n    };\n}\nfunction diagnosticsTooltip(view, diagnostics) {\n    return elt(\"ul\", { class: \"cm-tooltip-lint\" }, diagnostics.map(d => renderDiagnostic(view, d, false)));\n}\n/**\nCommand to open and focus the lint panel.\n*/\nconst openLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        view.dispatch({ effects: maybeEnableLint(view.state, [togglePanel.of(true)]) });\n    let panel = getPanel(view, LintPanel.open);\n    if (panel)\n        panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n    return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\nconst closeLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        return false;\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\nconst nextDiagnostic = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = view.state.selection.main, next = field.diagnostics.iter(sel.to + 1);\n    if (!next.value) {\n        next = field.diagnostics.iter(0);\n        if (!next.value || next.from == sel.from && next.to == sel.to)\n            return false;\n    }\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\nconst lintKeymap = [\n    { key: \"Mod-Shift-m\", run: openLintPanel, preventDefault: true },\n    { key: \"F8\", run: nextDiagnostic }\n];\nconst lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.timeout = -1;\n        this.set = true;\n        let { delay } = view.state.facet(lintConfig);\n        this.lintTime = Date.now() + delay;\n        this.run = this.run.bind(this);\n        this.timeout = setTimeout(this.run, delay);\n    }\n    run() {\n        let now = Date.now();\n        if (now < this.lintTime - 10) {\n            setTimeout(this.run, this.lintTime - now);\n        }\n        else {\n            this.set = false;\n            let { state } = this.view, { sources } = state.facet(lintConfig);\n            Promise.all(sources.map(source => Promise.resolve(source(this.view)))).then(annotations => {\n                let all = annotations.reduce((a, b) => a.concat(b));\n                if (this.view.state.doc == state.doc)\n                    this.view.dispatch(setDiagnostics(this.view.state, all));\n            }, error => { logException(this.view.state, error); });\n        }\n    }\n    update(update) {\n        let config = update.state.facet(lintConfig);\n        if (update.docChanged || config != update.startState.facet(lintConfig) ||\n            config.needsRefresh && config.needsRefresh(update)) {\n            this.lintTime = Date.now() + config.delay;\n            if (!this.set) {\n                this.set = true;\n                this.timeout = setTimeout(this.run, config.delay);\n            }\n        }\n    }\n    force() {\n        if (this.set) {\n            this.lintTime = Date.now();\n            this.run();\n        }\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n});\nconst lintConfig = /*@__PURE__*/Facet.define({\n    combine(input) {\n        return Object.assign({ sources: input.map(i => i.source) }, combineConfig(input.map(i => i.config), {\n            delay: 750,\n            markerFilter: null,\n            tooltipFilter: null,\n            needsRefresh: null\n        }, {\n            needsRefresh: (a, b) => !a ? b : !b ? a : u => a(u) || b(u)\n        }));\n    },\n    enables: lintPlugin\n});\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed).\n*/\nfunction linter(source, config = {}) {\n    return lintConfig.of({ source, config });\n}\n/**\nForces any linters [configured](https://codemirror.net/6/docs/ref/#lint.linter) to run when the\neditor is idle to run right away.\n*/\nfunction forceLinting(view) {\n    let plugin = view.plugin(lintPlugin);\n    if (plugin)\n        plugin.force();\n}\nfunction assignKeys(actions) {\n    let assigned = [];\n    if (actions)\n        actions: for (let { name } of actions) {\n            for (let i = 0; i < name.length; i++) {\n                let ch = name[i];\n                if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n                    assigned.push(ch);\n                    continue actions;\n                }\n            }\n            assigned.push(\"\");\n        }\n    return assigned;\n}\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n    var _a;\n    let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n    return elt(\"li\", { class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity }, elt(\"span\", { class: \"cm-diagnosticText\" }, diagnostic.renderMessage ? diagnostic.renderMessage() : diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n        let fired = false, click = (e) => {\n            e.preventDefault();\n            if (fired)\n                return;\n            fired = true;\n            let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n            if (found)\n                action.apply(view, found.from, found.to);\n        };\n        let { name } = action, keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n        let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex),\n            elt(\"u\", name.slice(keyIndex, keyIndex + 1)),\n            name.slice(keyIndex + 1)];\n        return elt(\"button\", {\n            type: \"button\",\n            class: \"cm-diagnosticAction\",\n            onclick: click,\n            onmousedown: click,\n            \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n        }, nameElt);\n    }), diagnostic.source && elt(\"div\", { class: \"cm-diagnosticSource\" }, diagnostic.source));\n}\nclass DiagnosticWidget extends WidgetType {\n    constructor(diagnostic) {\n        super();\n        this.diagnostic = diagnostic;\n    }\n    eq(other) { return other.diagnostic == this.diagnostic; }\n    toDOM() {\n        return elt(\"span\", { class: \"cm-lintPoint cm-lintPoint-\" + this.diagnostic.severity });\n    }\n}\nclass PanelItem {\n    constructor(view, diagnostic) {\n        this.diagnostic = diagnostic;\n        this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n        this.dom = renderDiagnostic(view, diagnostic, true);\n        this.dom.id = this.id;\n        this.dom.setAttribute(\"role\", \"option\");\n    }\n}\nclass LintPanel {\n    constructor(view) {\n        this.view = view;\n        this.items = [];\n        let onkeydown = (event) => {\n            if (event.keyCode == 27) { // Escape\n                closeLintPanel(this.view);\n                this.view.focus();\n            }\n            else if (event.keyCode == 38 || event.keyCode == 33) { // ArrowUp, PageUp\n                this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n            }\n            else if (event.keyCode == 40 || event.keyCode == 34) { // ArrowDown, PageDown\n                this.moveSelection((this.selectedIndex + 1) % this.items.length);\n            }\n            else if (event.keyCode == 36) { // Home\n                this.moveSelection(0);\n            }\n            else if (event.keyCode == 35) { // End\n                this.moveSelection(this.items.length - 1);\n            }\n            else if (event.keyCode == 13) { // Enter\n                this.view.focus();\n            }\n            else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) { // A-Z\n                let { diagnostic } = this.items[this.selectedIndex], keys = assignKeys(diagnostic.actions);\n                for (let i = 0; i < keys.length; i++)\n                    if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n                        let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n                        if (found)\n                            diagnostic.actions[i].apply(view, found.from, found.to);\n                    }\n            }\n            else {\n                return;\n            }\n            event.preventDefault();\n        };\n        let onclick = (event) => {\n            for (let i = 0; i < this.items.length; i++) {\n                if (this.items[i].dom.contains(event.target))\n                    this.moveSelection(i);\n            }\n        };\n        this.list = elt(\"ul\", {\n            tabIndex: 0,\n            role: \"listbox\",\n            \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n            onkeydown,\n            onclick\n        });\n        this.dom = elt(\"div\", { class: \"cm-panel-lint\" }, this.list, elt(\"button\", {\n            type: \"button\",\n            name: \"close\",\n            \"aria-label\": this.view.state.phrase(\"close\"),\n            onclick: () => closeLintPanel(this.view)\n        }, \"×\"));\n        this.update();\n    }\n    get selectedIndex() {\n        let selected = this.view.state.field(lintState).selected;\n        if (!selected)\n            return -1;\n        for (let i = 0; i < this.items.length; i++)\n            if (this.items[i].diagnostic == selected.diagnostic)\n                return i;\n        return -1;\n    }\n    update() {\n        let { diagnostics, selected } = this.view.state.field(lintState);\n        let i = 0, needsSync = false, newSelectedItem = null;\n        diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {\n            let found = -1, item;\n            for (let j = i; j < this.items.length; j++)\n                if (this.items[j].diagnostic == spec.diagnostic) {\n                    found = j;\n                    break;\n                }\n            if (found < 0) {\n                item = new PanelItem(this.view, spec.diagnostic);\n                this.items.splice(i, 0, item);\n                needsSync = true;\n            }\n            else {\n                item = this.items[found];\n                if (found > i) {\n                    this.items.splice(i, found - i);\n                    needsSync = true;\n                }\n            }\n            if (selected && item.diagnostic == selected.diagnostic) {\n                if (!item.dom.hasAttribute(\"aria-selected\")) {\n                    item.dom.setAttribute(\"aria-selected\", \"true\");\n                    newSelectedItem = item;\n                }\n            }\n            else if (item.dom.hasAttribute(\"aria-selected\")) {\n                item.dom.removeAttribute(\"aria-selected\");\n            }\n            i++;\n        });\n        while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n            needsSync = true;\n            this.items.pop();\n        }\n        if (this.items.length == 0) {\n            this.items.push(new PanelItem(this.view, {\n                from: -1, to: -1,\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n            needsSync = true;\n        }\n        if (newSelectedItem) {\n            this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n            this.view.requestMeasure({\n                key: this,\n                read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n                write: ({ sel, panel }) => {\n                    if (sel.top < panel.top)\n                        this.list.scrollTop -= panel.top - sel.top;\n                    else if (sel.bottom > panel.bottom)\n                        this.list.scrollTop += sel.bottom - panel.bottom;\n                }\n            });\n        }\n        else if (this.selectedIndex < 0) {\n            this.list.removeAttribute(\"aria-activedescendant\");\n        }\n        if (needsSync)\n            this.sync();\n    }\n    sync() {\n        let domPos = this.list.firstChild;\n        function rm() {\n            let prev = domPos;\n            domPos = prev.nextSibling;\n            prev.remove();\n        }\n        for (let item of this.items) {\n            if (item.dom.parentNode == this.list) {\n                while (domPos != item.dom)\n                    rm();\n                domPos = item.dom.nextSibling;\n            }\n            else {\n                this.list.insertBefore(item.dom, domPos);\n            }\n        }\n        while (domPos)\n            rm();\n    }\n    moveSelection(selectedIndex) {\n        if (this.selectedIndex < 0)\n            return;\n        let field = this.view.state.field(lintState);\n        let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n        if (!selection)\n            return;\n        this.view.dispatch({\n            selection: { anchor: selection.from, head: selection.to },\n            scrollIntoView: true,\n            effects: movePanelSelection.of(selection)\n        });\n    }\n    static open(view) { return new LintPanel(view); }\n}\nfunction svg(content, attrs = `viewBox=\"0 0 40 40\"`) {\n    return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;\n}\nfunction underline(color) {\n    return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`, `width=\"6\" height=\"3\"`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-diagnostic\": {\n        padding: \"3px 6px 3px 8px\",\n        marginLeft: \"-1px\",\n        display: \"block\",\n        whiteSpace: \"pre-wrap\"\n    },\n    \".cm-diagnostic-error\": { borderLeft: \"5px solid #d11\" },\n    \".cm-diagnostic-warning\": { borderLeft: \"5px solid orange\" },\n    \".cm-diagnostic-info\": { borderLeft: \"5px solid #999\" },\n    \".cm-diagnosticAction\": {\n        font: \"inherit\",\n        border: \"none\",\n        padding: \"2px 4px\",\n        backgroundColor: \"#444\",\n        color: \"white\",\n        borderRadius: \"3px\",\n        marginLeft: \"8px\",\n        cursor: \"pointer\"\n    },\n    \".cm-diagnosticSource\": {\n        fontSize: \"70%\",\n        opacity: .7\n    },\n    \".cm-lintRange\": {\n        backgroundPosition: \"left bottom\",\n        backgroundRepeat: \"repeat-x\",\n        paddingBottom: \"0.7px\",\n    },\n    \".cm-lintRange-error\": { backgroundImage: /*@__PURE__*/underline(\"#d11\") },\n    \".cm-lintRange-warning\": { backgroundImage: /*@__PURE__*/underline(\"orange\") },\n    \".cm-lintRange-info\": { backgroundImage: /*@__PURE__*/underline(\"#999\") },\n    \".cm-lintRange-active\": { backgroundColor: \"#ffdd9980\" },\n    \".cm-tooltip-lint\": {\n        padding: 0,\n        margin: 0\n    },\n    \".cm-lintPoint\": {\n        position: \"relative\",\n        \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            bottom: 0,\n            left: \"-2px\",\n            borderLeft: \"3px solid transparent\",\n            borderRight: \"3px solid transparent\",\n            borderBottom: \"4px solid #d11\"\n        }\n    },\n    \".cm-lintPoint-warning\": {\n        \"&:after\": { borderBottomColor: \"orange\" }\n    },\n    \".cm-lintPoint-info\": {\n        \"&:after\": { borderBottomColor: \"#999\" }\n    },\n    \".cm-panel.cm-panel-lint\": {\n        position: \"relative\",\n        \"& ul\": {\n            maxHeight: \"100px\",\n            overflowY: \"auto\",\n            \"& [aria-selected]\": {\n                backgroundColor: \"#ddd\",\n                \"& u\": { textDecoration: \"underline\" }\n            },\n            \"&:focus [aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            },\n            \"& u\": { textDecoration: \"none\" },\n            padding: 0,\n            margin: 0\n        },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"2px\",\n            background: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        }\n    }\n});\nclass LintGutterMarker extends GutterMarker {\n    constructor(diagnostics) {\n        super();\n        this.diagnostics = diagnostics;\n        this.severity = diagnostics.reduce((max, d) => {\n            let s = d.severity;\n            return s == \"error\" || s == \"warning\" && max == \"info\" ? s : max;\n        }, \"info\");\n    }\n    toDOM(view) {\n        let elt = document.createElement(\"div\");\n        elt.className = \"cm-lint-marker cm-lint-marker-\" + this.severity;\n        let diagnostics = this.diagnostics;\n        let diagnosticsFilter = view.state.facet(lintGutterConfig).tooltipFilter;\n        if (diagnosticsFilter)\n            diagnostics = diagnosticsFilter(diagnostics);\n        if (diagnostics.length)\n            elt.onmouseover = () => gutterMarkerMouseOver(view, elt, diagnostics);\n        return elt;\n    }\n}\nfunction trackHoverOn(view, marker) {\n    let mousemove = (event) => {\n        let rect = marker.getBoundingClientRect();\n        if (event.clientX > rect.left - 10 /* Hover.Margin */ && event.clientX < rect.right + 10 /* Hover.Margin */ &&\n            event.clientY > rect.top - 10 /* Hover.Margin */ && event.clientY < rect.bottom + 10 /* Hover.Margin */)\n            return;\n        for (let target = event.target; target; target = target.parentNode) {\n            if (target.nodeType == 1 && target.classList.contains(\"cm-tooltip-lint\"))\n                return;\n        }\n        window.removeEventListener(\"mousemove\", mousemove);\n        if (view.state.field(lintGutterTooltip))\n            view.dispatch({ effects: setLintGutterTooltip.of(null) });\n    };\n    window.addEventListener(\"mousemove\", mousemove);\n}\nfunction gutterMarkerMouseOver(view, marker, diagnostics) {\n    function hovered() {\n        let line = view.elementAtHeight(marker.getBoundingClientRect().top + 5 - view.documentTop);\n        const linePos = view.coordsAtPos(line.from);\n        if (linePos) {\n            view.dispatch({ effects: setLintGutterTooltip.of({\n                    pos: line.from,\n                    above: false,\n                    create() {\n                        return {\n                            dom: diagnosticsTooltip(view, diagnostics),\n                            getCoords: () => marker.getBoundingClientRect()\n                        };\n                    }\n                }) });\n        }\n        marker.onmouseout = marker.onmousemove = null;\n        trackHoverOn(view, marker);\n    }\n    let { hoverTime } = view.state.facet(lintGutterConfig);\n    let hoverTimeout = setTimeout(hovered, hoverTime);\n    marker.onmouseout = () => {\n        clearTimeout(hoverTimeout);\n        marker.onmouseout = marker.onmousemove = null;\n    };\n    marker.onmousemove = () => {\n        clearTimeout(hoverTimeout);\n        hoverTimeout = setTimeout(hovered, hoverTime);\n    };\n}\nfunction markersForDiagnostics(doc, diagnostics) {\n    let byLine = Object.create(null);\n    for (let diagnostic of diagnostics) {\n        let line = doc.lineAt(diagnostic.from);\n        (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);\n    }\n    let markers = [];\n    for (let line in byLine) {\n        markers.push(new LintGutterMarker(byLine[line]).range(+line));\n    }\n    return RangeSet.of(markers, true);\n}\nconst lintGutterExtension = /*@__PURE__*/gutter({\n    class: \"cm-gutter-lint\",\n    markers: view => view.state.field(lintGutterMarkers),\n});\nconst lintGutterMarkers = /*@__PURE__*/StateField.define({\n    create() {\n        return RangeSet.empty;\n    },\n    update(markers, tr) {\n        markers = markers.map(tr.changes);\n        let diagnosticFilter = tr.state.facet(lintGutterConfig).markerFilter;\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let diagnostics = effect.value;\n                if (diagnosticFilter)\n                    diagnostics = diagnosticFilter(diagnostics || []);\n                markers = markersForDiagnostics(tr.state.doc, diagnostics.slice(0));\n            }\n        }\n        return markers;\n    }\n});\nconst setLintGutterTooltip = /*@__PURE__*/StateEffect.define();\nconst lintGutterTooltip = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(tooltip, tr) {\n        if (tooltip && tr.docChanged)\n            tooltip = hideTooltip(tr, tooltip) ? null : Object.assign(Object.assign({}, tooltip), { pos: tr.changes.mapPos(tooltip.pos) });\n        return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);\n    },\n    provide: field => showTooltip.from(field)\n});\nconst lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-gutter-lint\": {\n        width: \"1.4em\",\n        \"& .cm-gutterElement\": {\n            padding: \".2em\"\n        }\n    },\n    \".cm-lint-marker\": {\n        width: \"1em\",\n        height: \"1em\"\n    },\n    \".cm-lint-marker-info\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#aaf\" stroke=\"#77e\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M5 5L35 5L35 35L5 35Z\"/>`)\n    },\n    \".cm-lint-marker-warning\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#fe8\" stroke=\"#fd7\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M20 6L37 35L3 35Z\"/>`),\n    },\n    \".cm-lint-marker-error\": {\n        content: /*@__PURE__*/svg(`<circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"#f87\" stroke=\"#f43\" stroke-width=\"6\"/>`)\n    },\n});\nconst lintGutterConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            hoverTime: 300 /* Hover.Time */,\n            markerFilter: null,\n            tooltipFilter: null\n        });\n    }\n});\n/**\nReturns an extension that installs a gutter showing markers for\neach line that has diagnostics, which can be hovered over to see\nthe diagnostics.\n*/\nfunction lintGutter(config = {}) {\n    return [lintGutterConfig.of(config), lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];\n}\n/**\nIterate over the marked diagnostics for the given editor state,\ncalling `f` for each of them. Note that, if the document changed\nsince the diagnostics were created, the `Diagnostic` object will\nhold the original outdated position, whereas the `to` and `from`\narguments hold the diagnostic's current position.\n*/\nfunction forEachDiagnostic(state, f) {\n    let lState = state.field(lintState, false);\n    if (lState && lState.diagnostics.size)\n        for (let iter = RangeSet.iter([lState.diagnostics]); iter.value; iter.next())\n            f(iter.value.spec.diagnostic, iter.from, iter.to);\n}\n\nexport { closeLintPanel, diagnosticCount, forEachDiagnostic, forceLinting, lintGutter, lintKeymap, linter, nextDiagnostic, openLintPanel, setDiagnostics, setDiagnosticsEffect };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}